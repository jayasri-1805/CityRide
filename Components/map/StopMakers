import React from "react";
import { CircleMarker, Popup } from "react-leaflet";
import { Badge } from "@/components/ui/badge";
import { Clock, Wifi, Accessibility } from "lucide-react";

export default function StopMarkers({ stops, selectedRoute, onStopSelect }) {
  const filteredStops = selectedRoute
    ? stops.filter(stop => stop.routes?.includes(selectedRoute.id))
    : stops;

  const getAmenityIcon = (amenity) => {
    switch (amenity) {
      case 'wheelchair_accessible': return <Accessibility className="w-3 h-3" />;
      case 'real_time_display': return <Clock className="w-3 h-3" />;
      case 'wifi': return <Wifi className="w-3 h-3" />;
      default: return null;
    }
  };

  return (
    <>
      {filteredStops.map((stop) => (
        <CircleMarker
          key={stop.id}
          center={[stop.latitude, stop.longitude]}
          radius={stop.is_major_stop ? 8 : 5}
          fillColor={stop.is_major_stop ? "#1e3a8a" : "#3b82f6"}
          fillOpacity={0.8}
          stroke={true}
          color="white"
          weight={2}
          eventHandlers={{
            click: () => onStopSelect(stop)
          }}
        >
          <Popup>
            <div className="p-2 min-w-[180px]">
              <h3 className="font-semibold mb-1">{stop.stop_name}</h3>
              <p className="text-sm text-gray-600 mb-2">Code: {stop.stop_code}</p>
              
              {stop.is_major_stop && (
                <Badge variant="outline" className="mb-2 text-xs">
                  Major Stop
                </Badge>
              )}
              
              {stop.amenities && stop.amenities.length > 0 && (
                <div className="mb-2">
                  <p className="text-xs font-medium text-gray-700 mb-1">Amenities:</p>
                  <div className="flex flex-wrap gap-1">
                    {stop.amenities.map((amenity) => (
                      <Badge key={amenity} variant="secondary" className="text-xs flex items-center gap-1">
                        {getAmenityIcon(amenity)}
                        {amenity.replace('_', ' ')}
                      </Badge>
                    ))}
                  </div>
                </div>
              )}
              
              {stop.routes && stop.routes.length > 0 && (
                <div>
                  <p className="text-xs font-medium text-gray-700 mb-1">Routes:</p>
                  <div className="flex flex-wrap gap-1">
                    {stop.routes.map((routeId) => (
                      <Badge key={routeId} variant="outline" className="text-xs">
                        Route {routeId}
                      </Badge>
                    ))}
                  </div>
                </div>
              )}
            </div>
          </Popup>
        </CircleMarker>
      ))}
    </>
  );
}
